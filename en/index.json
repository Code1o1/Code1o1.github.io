[{"categories":["Shortcode"],"content":"Rienforcement Learning to develop AI agents Reinforcement learning (RL) is an area of machine learning concerned with how intelligent agents ought to take actions in an environment in order to maximize the notion of cumulative reward.Reinforcement learning is one of three basic machine learning paradigms, alongside supervised learning and unsupervised learning.\nReinforcement learning differs from supervised learning in not needing labelled input/output pairs be presented, and in not needing sub-optimal actions to be explicitly corrected. Instead the focus is on finding a balance between exploration (of uncharted territory) and exploitation (of current knowledge). This project \u0026ldquo;Learning RL to develop AI agents\u0026rdquo; was offered by ACA(Association of Computer Activities IITK).\nGeneral Concepts : Introduction to Machine Learning  Field of study that gives computers the ability to learn without being explicitly programmed.A computer program is said to learn from experience E with respect to some task T and some performance measure P,if its performance on T,as measured by P, improves with experience E.\nMachine learning algorithms:  Supervised learning Unsupervised learning Reinforcement learning.  Model Representation Generaling speaking,The aim of the supervised learning algorithm is to use the given training Dataset and output a Hypothesis function.Where Hypothesis function takes the input instance and predicts the output based on its learnings from the training dataset. Linear\tregression\twith\tone\tvariable. For linear regression in one variable,the hypothesis function will be of the form-h(x) = Œò0 + Œò1*x where, Œò0 and Œò1 are the parameters.\nThe line seen in the graph is the Hypothesis function. This line is the best fit that passes through most of the points.Now we know it\u0026rsquo;s not possible to tell the hypothesis function by merely looking at the graph! We need some systematic way to figure it out.Cost Functionhelps us to figure out which hypothesis best fits our data. Or more formally,It helps us to measure the errorof our hypothesis.It\u0026rsquo;s often called the squared error function.Mathematically, Cost function ‚Äî\n(h(x) ‚Äî y)¬≤ : Squared vertical distances of the scattered points from the hypothesis. ‚àë(h(x) ‚Äî y)¬≤/2m: Average Squared vertical distances of the scattered points from the hypothesis, i.e Mean Squared error. Now we have our hypothesis function and we also have a method of measuring how well it fits into the given data.All we need to do is find the value of parameters(Œò0 and Œò1) for which the cost function (i.e. error) is minimum.That‚Äôs where gradient descent comes into the picture\nGradient descentis an optimization algorithm for finding a local minimum of a differentiable function.Gradient descent is simply used to find the values of a function\u0026rsquo;s parameters that minimize a cost function as much as possible.Here you can find more details about Gradient descent.Mathematical form of Gradient Descent for Linear Regression-repeat until Convergence:{ Theta(0) := Theta(0) - (Œ±/m)* Œ£(h(xi) - yi) Theta(1) := Theta(1) - (Œ±/m)* Œ£(h(xi) - yi) } Note:- 1) Update Theta(0) and Theta(1) Simultaneously. 2) Œ£ is done for i=0 to m. where, m is Number of training examples in training dataset. Here, Œ± is the size of each step known as the Learning rate. The value of Œ± should be selected with care to ensure that the gradient descent algorithm converges correctly in a reasonable time. ","date":"Jul 12, 2021","permalink":"/en/posts/rienforcement-learning/","series":["Projects"],"tags":["RL","ML","Python","Rienforcement Learning","Machine Learning","aca"],"title":"Rienforcement Learning to develop AI agents"},{"categories":null,"content":"Hey ,Glad you are here :Slightly Smiling Face: I‚Äôm Sandeep Kumar, a undergrad student in Computer Science and Engineering at IIT Kanpur,(class of 2024). Since the endsem exams of my second semester ended today (in my bedroom on a random Sunday at 11:10 AM :Slightly Frowning Face:) I thought of posting programming stuffs and well general life experience too .So I chose to make my own blog manager.Based on my experience and working with peers I loved to give you an overview. I am grateful for working with some amazing people from which I had the pleasure to learn a lot.\n After researching different programming languages I really got into HTML and CSS.For me initially it was the desire to build my own website. Then in the process I found the beautiful world of programming :) .\n This is my second webpage ready in 2 semesters.Though everytime I try something cool and new to get a great learning experirnce. So finally this time I decided to use some static site generators. Yes they are easy to maintain and support full markdown based blog with other cool features.Currently I have hosted this blog on Netlify and Github pages. Sometime Later I might shift to other domains if I find some cool one or a Personal domain.\n This static site is build using JekyllHugo framework and a Bootstrap theme.\n Is it easy to setup Hugo ? I went through the Official docs of Hugo.Here are some of the key points from docs:-\n One can install Hugo on any machine where the Go compiler tool chain can run. Being familiar with Golang and Ruby was the reason I chose Hugo and Jekyll respectively over any other framework. We can install Hugo using snap install hugoand sudo apt-get install hugopackages but these options are not recommended because the Hugo in Linux package managers for Debian and Ubuntu is usually a few versions behind. Homebrew was prescribed but I personally don\u0026rsquo;t want to install brew for just Hugo. So I then tried to find some extended versions of Hugo on google. But still being a noob at googling I couldn\u0026rsquo;t find any way.   Above point is only for Ubuntu and Debian. As most of the time I use these two operating systems.(Also I will describe more about operating systems I have on my machine and how I f*cked up while Installing multiple OS in some another blog ,till then stay tuned.)  I finally found a Extended version on Github ü§¶ . Here are some steps how I installed it-   Open Your terminal (Ctrl+Alt+T) and download the latest version of Hugo package from the Git repository by executing the following commands:- 1.$ sudo apt-get update -y 2.$ wget https://github.com/gohugoio/hugo/releases/download/v0.79.0/hugo_0.79.0_Linux-64bit.deb 3. $ sudo dpkg -i hugo_0.79.0_Linux-64bit.deb 4. $ sudo apt-get install -f Info  You can check version by-\nhugo version Success  Hugo setup is complete and ready to work. Refer to above git repository for updated versions.\n During the whole process of building this blog I spent majority of time understanding how it works and customizing the CSS . It might be disconcert initially but altogether it\u0026rsquo;s easy to maintain (You can create the whole syntax of new posts just by executing some commands. There‚Äôs a lot more to explore about it.This was all about how this blog enhanced. See you a semester later! :) If you reached here reading this, I must\u0026rsquo;ve been making sense. If you have any questions, feel free to hit me up. I hope to see you soon at Campus :Red Heart: \n","date":"Jul 11, 2021","permalink":"/en/posts/blog102/","series":["About me"],"tags":["blog102","Hugo","Jekyll"],"title":"Blog102"},{"categories":["Shortcode"],"content":"I\u0026rsquo;m writting this blog while doing my summer project on getting insights into various programming languages and understanding the different paradigms of programming.\n General Concepts- Here is a quick overview on Fundamentals of Programming Languages : Similar to human interface languages, which have their own set of rules that have to be followed in order to write correctly in that language, programming languages ‚Äã‚Äãalso follow certain rules.Classification of programming languages on the basis of -\n Programming Paradigms Programming Models Type System  1) Programming Paradigms Programming Paradigm is a style, technique, or way of writing a program to solve a problem.There are two primary programming paradigms:-\n Imperative :- Imperative programming is the oldest programming paradigm.Programs in which we need to clearly define the sequence of instructions for the computer are imperative. Declarative:- In the declarative programming paradigm, we simply tell the problem to the computer and let the computer decide what action to take. In other words, we just need to express the logic of the computation without talking about its control flow.  2) Programming Models Programming Models :- Programming Model is a set of concepts used to create software, which are mainly used to guide the development of programming languages. The programming model acts as a bridge between algorithms and actual implementations. Languages can be classified into many, many models.\n  Procedural Oriented: The program in which code is written in step wise procedure mainly in the form of sub-functions is Procedural Oriented.This is derived from structured programming.For example C language.\n  Purely Object Oriented: Languages in which everything is treated consistently as an object, from primitives such as characters and integers, all the way up to whole classes, blocks, modules,etc.Ruby is one such language.\n  Purely Functional: Languages in which programs are constructed by applying and composing functions.Here, functions also do not have any side-effects in other words no function can alter the internal state of some variable.Haskell is one such language.\n  Logic Programming: Languages in which a program is written as a set of sentences in logical form.For these, PROLOG(programming in logic) is the best known example. Here, a program is executed by an ‚Äúinference engine‚Äù that answers a query by searching these relations systematically to make inferences that will answer a query.\n  3) Type System In programming languages, a type system is a logical system comprising a set of rules that assigns a property called a type to the various constructs of a computer program, such as variables, expressions, functions or modules.\n A.Strong vs Weak typing: B.Static vs Dynamic 1 typing: C.Manifest vs Inferred: D.Nominal vs Structural: E. Duck Typing:   This project comprises of following six major languages: Python  JavaScript  Ruby  Go  Scala Julia More Info about above languages and tasks can be found in respective folders.\n","date":"Jun 17, 2021","permalink":"/en/posts/programming-languages/","series":["Projects"],"tags":["programming101","project","paradigms"],"title":"getting insights into various programming languages"},{"categories":null,"content":"Hi! I am a Freshman at IIT Kanpur.Currently Pursuing my majors in the Department of Computer Science and Engineering. I‚Äôm interested in jumping in and trying out some coding.Currently working on Deep Learning and also getting some insights on various programming Languages.I would love to write something I learn.\n","date":"Jun 2, 2021","permalink":"/en/about/","series":null,"tags":null,"title":"About"},{"categories":[],"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;‚Äî\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.‚Äî Rob Pike1 Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Italics Bold Code     italics bold code    Code Blocks Code block with backticks \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Fruit  Apple Orange Banana   Dairy  Milk Cheese    Other Elements ‚Äî abbr, sub, sup, kbd, mark GIFis a bitmap image format.\nH2O\nXn+ Yn= ZnPress CTRL+ALT+Deleteto end the session.\nMost salamandersare nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. \u0026#x21a9;\u0026#xfe0e;\n  ","date":"Nov 9, 2020","permalink":"/en/posts/markdown-syntax/","series":["User Manual"],"tags":["Markdown","CSS","HTML"],"title":"Markdown Syntax Guide"},{"categories":["Shortcode"],"content":"A detailed description of Youku shortcode.\nUsage {{\u0026lt; youku \u0026#34;XNTQwMTgxMTE2\u0026#34; \u0026gt;}} Example  ","date":"Oct 22, 2020","permalink":"/en/posts/shortcodes/youku/","series":null,"tags":["Youku"],"title":"Youku Video Shortcode"},{"categories":null,"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\n Exierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude  Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\n Comas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et  Vagus elidunt The Van de Graaf Canon Mane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","date":"Mar 9, 2019","permalink":"/en/posts/placeholder-text/","series":null,"tags":["Markdown","Text"],"title":"Placeholder Text"},{"categories":null,"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nThis theme supports KaTeX .\n To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files  Note: Use the online reference of Supported TeX Functions Examples $$ (\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887‚Ä¶) $$\n$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","date":"Mar 8, 2019","permalink":"/en/posts/math-typesetting/","series":null,"tags":["Math"],"title":"Math Typesetting"},{"categories":[],"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes .\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\n N.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1).emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; }\n","date":"Mar 5, 2019","permalink":"/en/posts/emoji-support/","series":null,"tags":["Emoji"],"title":"Emoji Support"}]