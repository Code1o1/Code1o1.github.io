[{"categories":[],"content":"Rienforcement Learning to develop AI agents Reinforcement learning (RL) is an area of machine learning concerned with how intelligent agents ought to take actions in an environment in order to maximize the notion of cumulative reward.Reinforcement learning is one of three basic machine learning paradigms, alongside supervised learning and unsupervised learning.\nReinforcement learning differs from supervised learning in not needing labelled input/output pairs be presented, and in not needing sub-optimal actions to be explicitly corrected. Instead the focus is on finding a balance between exploration (of uncharted territory) and exploitation (of current knowledge). This project \u0026ldquo;Learning RL to develop AI agents\u0026rdquo; was offered by ACA(Association of Computer Activities IITK).\nGeneral Concepts : Introduction to Machine Learning  Field of study that gives computers the ability to learn without being explicitly programmed.A computer program is said to learn from experience E with respect to some task T and some performance measure P,if its performance on T,as measured by P, improves with experience E.\nMachine learning algorithms:  Supervised learning Unsupervised learning Reinforcement learning.  Model Representation Generaling speaking,The aim of the supervised learning algorithm is to use the given training Dataset and output a Hypothesis function.Where Hypothesis function takes the input instance and predicts the output based on its learnings from the training dataset. Linear\tregression\twith\tone\tvariable. For linear regression in one variable,the hypothesis function will be of the form-h(x) = Θ0 + Θ1*x where, Θ0 and Θ1 are the parameters.\nThe line seen in the graph is the Hypothesis function. This line is the best fit that passes through most of the points.Now we know it\u0026rsquo;s not possible to tell the hypothesis function by merely looking at the graph! We need some systematic way to figure it out.Cost Functionhelps us to figure out which hypothesis best fits our data. Or more formally,It helps us to measure the errorof our hypothesis.It\u0026rsquo;s often called the squared error function.Mathematically, Cost function —Now we have our hypothesis function and we also have a method of measuring how well it fits into the given data.All we need to do is find the value of parameters(Θ0 and Θ1) for which the cost function (i.e. error) is minimum.That’s where gradient descent comes into the picture\nGradient descentis an optimization algorithm for finding a local minimum of a differentiable function.Gradient descent is simply used to find the values of a function\u0026rsquo;s parameters that minimize a cost function as much as possible.Here you can find more details about Gradient descent.Mathematical form of Gradient Descent for Linear Regression-","date":"Jul 12, 2021","permalink":"/en/posts/rienforcement-learning/","series":["Projects"],"tags":["RL","ML","Python","Rienforcement Learning","Machine Learning","aca"],"title":"Rienforcement Learning to develop AI agents"},{"categories":[],"content":"Rienforcement Learning to develop AI agents Reinforcement learning (RL) is an area of machine learning concerned with how intelligent agents ought to take actions in an environment in order to maximize the notion of cumulative reward.Reinforcement learning is one of three basic machine learning paradigms, alongside supervised learning and unsupervised learning.\nReinforcement learning differs from supervised learning in not needing labelled input/output pairs be presented, and in not needing sub-optimal actions to be explicitly corrected. Instead the focus is on finding a balance between exploration (of uncharted territory) and exploitation (of current knowledge). This project \u0026ldquo;Learning RL to develop AI agents\u0026rdquo; was offered by ACA(Association of Computer Activities IITK).\nGeneral Concepts : Introduction to Machine Learning  Field of study that gives computers the ability to learn without being explicitly programmed.A computer program is said to learn from experience E with respect to some task T and some performance measure P,if its performance on T,as measured by P, improves with experience E.\nMachine learning algorithms:  Supervised learning Unsupervised learning Reinforcement learning.  Model Representation Generaling speaking,The aim of the supervised learning algorithm is to use the given training Dataset and output a Hypothesis function.Where Hypothesis function takes the input instance and predicts the output based on its learnings from the training dataset. Linear\tregression\twith\tone\tvariable. For linear regression in one variable,the hypothesis function will be of the form-h(x) = Θ0 + Θ1*x where, Θ0 and Θ1 are the parameters.\nThe line seen in the graph is the Hypothesis function. This line is the best fit that passes through most of the points.Now we know it\u0026rsquo;s not possible to tell the hypothesis function by merely looking at the graph! We need some systematic way to figure it out.Cost Functionhelps us to figure out which hypothesis best fits our data. Or more formally,It helps us to measure the errorof our hypothesis.It\u0026rsquo;s often called the squared error function.Mathematically, Cost function —Now we have our hypothesis function and we also have a method of measuring how well it fits into the given data.All we need to do is find the value of parameters(Θ0 and Θ1) for which the cost function (i.e. error) is minimum.That’s where gradient descent comes into the picture\nGradient descentis an optimization algorithm for finding a local minimum of a differentiable function.Gradient descent is simply used to find the values of a function\u0026rsquo;s parameters that minimize a cost function as much as possible.Here you can find more details about Gradient descent.Mathematical form of Gradient Descent for Linear Regression-","date":"Jul 12, 2021","permalink":"/en/posts/shortcodes/rienforcement-learning/","series":["Projects"],"tags":["RL","ML","Python","Rienforcement Learning","Machine Learning","aca"],"title":"Rienforcement Learning to develop AI agents"},{"categories":null,"content":"I\u0026rsquo;m writting this blog while doing my summer project on getting insights into various programming languages and understanding the different paradigms of programming.\n General Concepts- Here is a quick overview on Fundamentals of Programming Languages : Similar to human interface languages, which have their own set of rules that have to be followed in order to write correctly in that language, programming languages ​​also follow certain rules.Classification of programming languages on the basis of -\n Programming Paradigms Programming Models Type System  1) Programming Paradigms Programming Paradigm is a style, technique, or way of writing a program to solve a problem.There are two primary programming paradigms:-\n Imperative :- Imperative programming is the oldest programming paradigm.Programs in which we need to clearly define the sequence of instructions for the computer are imperative. Declarative:- In the declarative programming paradigm, we simply tell the problem to the computer and let the computer decide what action to take. In other words, we just need to express the logic of the computation without talking about its control flow.  2) Programming Models Programming Models :- Programming Model is a set of concepts used to create software, which are mainly used to guide the development of programming languages. The programming model acts as a bridge between algorithms and actual implementations. Languages can be classified into many, many models.\n  Procedural Oriented: The program in which code is written in step wise procedure mainly in the form of sub-functions is Procedural Oriented.This is derived from structured programming.For example C language.\n  Purely Object Oriented: Languages in which everything is treated consistently as an object, from primitives such as characters and integers, all the way up to whole classes, blocks, modules,etc.Ruby is one such language.\n  Purely Functional: Languages in which programs are constructed by applying and composing functions.Here, functions also do not have any side-effects in other words no function can alter the internal state of some variable.Haskell is one such language.\n  Logic Programming: Languages in which a program is written as a set of sentences in logical form.For these, PROLOG(programming in logic) is the best known example. Here, a program is executed by an “inference engine” that answers a query by searching these relations systematically to make inferences that will answer a query.\n  3) Type System In programming languages, a type system is a logical system comprising a set of rules that assigns a property called a type to the various constructs of a computer program, such as variables, expressions, functions or modules.\n A.Strong vs Weak typing: B.Static vs Dynamic 1 typing: C.Manifest vs Inferred: D.Nominal vs Structural: E. Duck Typing:   This project comprises of following six major languages: Python  JavaScript  Ruby  Go  Scala Julia More Info about above languages and tasks can be found in respective folders.\n","date":"Jun 17, 2021","permalink":"/en/posts/programming-languages/","series":["Projects"],"tags":["programming101","project","paradigms"],"title":"getting insights into various programming languages"},{"categories":null,"content":"I\u0026rsquo;m writting this blog while doing my summer project on getting insights into various programming languages and understanding the different paradigms of programming.\n General Concepts- Here is a quick overview on Fundamentals of Programming Languages : Similar to human interface languages, which have their own set of rules that have to be followed in order to write correctly in that language, programming languages ​​also follow certain rules.Classification of programming languages on the basis of -\n Programming Paradigms Programming Models Type System  1) Programming Paradigms Programming Paradigm is a style, technique, or way of writing a program to solve a problem.There are two primary programming paradigms:-\n Imperative :- Imperative programming is the oldest programming paradigm.Programs in which we need to clearly define the sequence of instructions for the computer are imperative. Declarative:- In the declarative programming paradigm, we simply tell the problem to the computer and let the computer decide what action to take. In other words, we just need to express the logic of the computation without talking about its control flow.  2) Programming Models Programming Models :- Programming Model is a set of concepts used to create software, which are mainly used to guide the development of programming languages. The programming model acts as a bridge between algorithms and actual implementations. Languages can be classified into many, many models.\n  Procedural Oriented: The program in which code is written in step wise procedure mainly in the form of sub-functions is Procedural Oriented.This is derived from structured programming.For example C language.\n  Purely Object Oriented: Languages in which everything is treated consistently as an object, from primitives such as characters and integers, all the way up to whole classes, blocks, modules,etc.Ruby is one such language.\n  Purely Functional: Languages in which programs are constructed by applying and composing functions.Here, functions also do not have any side-effects in other words no function can alter the internal state of some variable.Haskell is one such language.\n  Logic Programming: Languages in which a program is written as a set of sentences in logical form.For these, PROLOG(programming in logic) is the best known example. Here, a program is executed by an “inference engine” that answers a query by searching these relations systematically to make inferences that will answer a query.\n  3) Type System In programming languages, a type system is a logical system comprising a set of rules that assigns a property called a type to the various constructs of a computer program, such as variables, expressions, functions or modules.\n A.Strong vs Weak typing: B.Static vs Dynamic 1 typing: C.Manifest vs Inferred: D.Nominal vs Structural: E. Duck Typing:   This project comprises of following six major languages: Python  JavaScript  Ruby  Go  Scala Julia More Info about above languages and tasks can be found in respective folders.\n","date":"Jun 17, 2021","permalink":"/en/posts/shortcodes/programming-languages/","series":["Projects"],"tags":["programming101","project","paradigms"],"title":"getting insights into various programming languages"},{"categories":null,"content":"Hi! I am a Freshman at IIT Kanpur.Currently Pursuing my majors in the Department of Computer Science and Engineering. I’m interested in jumping in and trying out some coding.Currently working on Deep Learning and also getting some insights on various programming Languages.I would love to write something I learn.\n","date":"Jun 2, 2021","permalink":"/en/about/","series":null,"tags":null,"title":"About"},{"categories":[],"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.— Rob Pike1 Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Italics Bold Code     italics bold code    Code Blocks Code block with backticks \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Fruit  Apple Orange Banana   Dairy  Milk Cheese    Other Elements — abbr, sub, sup, kbd, mark GIFis a bitmap image format.\nH2O\nXn+ Yn= ZnPress CTRL+ALT+Deleteto end the session.\nMost salamandersare nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. \u0026#x21a9;\u0026#xfe0e;\n  ","date":"Nov 9, 2020","permalink":"/en/posts/markdown-syntax/","series":["User Manual"],"tags":["Markdown","CSS","HTML"],"title":"Markdown Syntax Guide"},{"categories":["Shortcode"],"content":"This article shows how to use the alert shortcode.\n{{\u0026lt; alert \u0026#34;Message\u0026#34; [type] \u0026gt;}}  The parameter type is optional. Default to info.\n Info {{\u0026lt; alert \u0026#34;Info\u0026#34; \u0026gt;}} Info  Success {{\u0026lt; alert \u0026#34;Success\u0026#34; success \u0026gt;}} Success  Warning {{\u0026lt; alert \u0026#34;Warning\u0026#34; warning \u0026gt;}} Warning  Danger {{\u0026lt; alert \u0026#34;Danger\u0026#34; danger \u0026gt;}} Danger ","date":"Oct 22, 2020","permalink":"/en/posts/shortcodes/alert/","series":["User Manual"],"tags":["Alert"],"title":"Alert Shortcode"},{"categories":["Shortcode"],"content":"A detailed description of Bilibili video shortcode.\nUsage {{\u0026lt; bilibili \u0026#34;video id\u0026#34; \u0026gt;}} Example  ","date":"Oct 22, 2020","permalink":"/en/posts/shortcodes/bilibili/","series":null,"tags":["Bilibili"],"title":"Bilibili Video Shortcode"},{"categories":["Shortcode"],"content":"A detailed description of CodePen shortcode.\nUsage {{\u0026lt; codepen \u0026#34;id\u0026#34; \u0026gt;}} Example  ","date":"Oct 22, 2020","permalink":"/en/posts/shortcodes/codepen/","series":null,"tags":["CodePen"],"title":"CodePen Shortcode"},{"categories":["Shortcode"],"content":"A detailed description of iQIYI Video shortcode.\nUsage {{\u0026lt; iqiyi \u0026#34;vid\u0026#34; \u0026#34;tvid\u0026#34; \u0026gt;}} Example  ","date":"Oct 22, 2020","permalink":"/en/posts/shortcodes/iqiyi/","series":null,"tags":["iQIYI"],"title":"iQIYI Video Shortcode"},{"categories":["Shortcode"],"content":"A detailed description of JSFiddle shortcode.\nUsage {{\u0026lt; jsfiddle \u0026#34;user/id\u0026#34; \u0026gt;}} Example  ","date":"Oct 22, 2020","permalink":"/en/posts/shortcodes/jsfiddle/","series":null,"tags":["JSFiddle"],"title":"JSFiddle Shortcode"},{"categories":["Shortcode"],"content":"A detailed description of JSRun shortcode.\nUsage {{\u0026lt; jsrun \u0026#34;id\u0026#34; \u0026gt;}} Example  ","date":"Oct 22, 2020","permalink":"/en/posts/shortcodes/jsrun/","series":null,"tags":["JSRun"],"title":"JSRun Shortcode"},{"categories":["Shortcode"],"content":"A detailed description of Netease music shortcode.\nUsage {{\u0026lt; neteasemusic \u0026#34;id\u0026#34; [auto [type]] \u0026gt;}}    Parameter Description     auto The auto controls whether to autoplay. Boolean and optional, default to false.   type The type parameter is optional. Default to 2.    Example  ","date":"Oct 22, 2020","permalink":"/en/posts/shortcodes/neteasemusic/","series":null,"tags":["Netease Music"],"title":"Netease Music Shortcode"},{"categories":["Shortcode"],"content":"A detailed description of Tencent video shortcode.\nUsage {{\u0026lt; tencentvideo \u0026#34;vid\u0026#34; \u0026gt;}} Example  ","date":"Oct 22, 2020","permalink":"/en/posts/shortcodes/tencentvideo/","series":null,"tags":["Tencent Video"],"title":"Tencent Video Shortcode"},{"categories":["Shortcode"],"content":"A detailed description of Youku shortcode.\nUsage {{\u0026lt; youku \u0026#34;XNTQwMTgxMTE2\u0026#34; \u0026gt;}} Example  ","date":"Oct 22, 2020","permalink":"/en/posts/shortcodes/youku/","series":null,"tags":["Youku"],"title":"Youku Video Shortcode"},{"categories":null,"content":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\n Instagram Simple Shortcode {{\u0026lt; instagram_simple BGvuInzyFAe hidecaption \u0026gt;}}  YouTube Privacy Enhanced Shortcode {{\u0026lt; youtube ZJthWmvUzzc \u0026gt;}}  Twitter Simple Shortcode {{\u0026lt; twitter_simple 1085870671291310081 \u0026gt;}}  Vimeo Simple Shortcode {{\u0026lt; vimeo_simple 48912912 \u0026gt;}} ","date":"Mar 10, 2019","permalink":"/en/posts/rich-content/","series":null,"tags":["Instagram","YouTube","Twitter","Vimeo","Privacy"],"title":"Rich Content"},{"categories":null,"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\n Exierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude  Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\n Comas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et  Vagus elidunt The Van de Graaf Canon Mane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","date":"Mar 9, 2019","permalink":"/en/posts/placeholder-text/","series":null,"tags":["Markdown","Text"],"title":"Placeholder Text"},{"categories":null,"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nThis theme supports KaTeX .\n To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files  Note: Use the online reference of Supported TeX Functions Examples $$ (\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…) $$\n$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","date":"Mar 8, 2019","permalink":"/en/posts/math-typesetting/","series":null,"tags":["Math"],"title":"Math Typesetting"},{"categories":[],"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes .\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\n N.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n.emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; }","date":"Mar 5, 2019","permalink":"/en/posts/emoji-support/","series":null,"tags":["Emoji"],"title":"Emoji Support"}]