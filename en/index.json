[{"categories":null,"content":"Things to explore in college Later or soon you will be kicked out of the campus. College life is cheerful and indeed the most beautiful But it can be dreadful at the same time. Memories of which shall linger in your heart, forever. The IITK campus offers a unique blend of things, that you won’t find anywhere else - Friends, Hall, Events, inter and intra-hall competitions, Wingies, Baapu, Amma, Hall 10 canteen, OAT, Airstrip, and what not! Make sure you make each and every memorable while you are still in college. I have compiled a list of things you could do before you leave campus. Check out as many as possible.\n  Write something: You can publish a poem, article, or artwork in a campus magazine and on other platforms. Some of the magazines I remember are Nerd, Spark, and Alumni magazines. Everything you do is worth writing about. Do not forget to write a Letter To Your Future Self.\n  Taste the beer and pass out at least once: Well, if you know that you are going to taste alcohol at one or other time in your life, then this may be the best time. I\u0026rsquo;m sure, one of your wingies can help you out with that. So get into your cutest PJs, order some pizza, pop open a bottle of wine, and have a blast with a night in!\n  Procrastination Level -Infinite : deadline: at 00:00, report submitted at: 11:59. Want to have a night out the day before the exam? Or start reading the night before the exam?\n  Jump over the restricted wall: Breaking the rules has always been fun for me. Hopefully same would have been for you, no matter how small the violation may be. Jump into the swimming pool complex, academic area, or GH in the wee hours of the night or the broad daylight as it suits you.\n  Explore Campus at night: Get into your shoes, catch some of your friends and just get out. Spend sometime in mini OAT at IME courtyard, find out a way to NCL labs roof top, gossip in Technopark, etc. While most of the time you won’t need a torch, it can be handy. If you get a chance, have a look at the beautiful night moon through the telescope with help of astronomy club guys.\n  Go for a cycle trip: Early morning, leave for Bithoor on a cycle. The morning weather will definitely relax you. Photographs in the morning light are usually good - also remember to click a few photos of yourself. Well the zoo can be a place to visit. You can also spot a floating bridge at Ganga River officially named as the Lav Khush Barrage. While I haven’t tried, more adventurous ones can definitely plan a cycle trip to Lucknow or other nearby places.\n  Enter hostel room of person of opposite gender: Pay a surprise visit to the room of your friend and find out if your notions of boy’s messy room or girl’s fully decorated room are actually true.\n  Chat with people around: Try talking to one of the Security guards, mess workers, Online delivery guy, gardeners, or anyone else who you see around. Try to know them, their life, their perspective of life, their side of campus life and that may have a huge impact on your life.\n  Play at least five sports: I have experienced that IIT Kanpur provides excellent sports facilities to all the students. Athletics, swimming, lawn tennis, badminton, squash, basketball, pool, cricket, football, hockey, table tennis and many others I\u0026rsquo;m not aware of - play five of them at least once, no matter how bad you are. You may never get a chance to play again for a long time.\n  Visit Air-strip: Visit air-strip and ask your friend to click a photograph while you pose as a flying aircraft - arms stretched out and bent a little forward - running towards the photographer. Choose some suitable time, so you also have a chance to look at the gliders. Looking forward to having a Joy ride :)\n  Arrange for hostel bon-fire: Arranging for a bon-fire may take some effort, but you will be lauded in the end - everyone love warmth in a chilling winter night. Late night birthday parties could be best time to arrange one.\n  Eat at Sagar, Ramaiya Dhaba: Road-side dhabas are not just for truck drivers, they are for guys like us too. You will not find spring rolls on the menu (I doubt if they even have printed menu), but their simple desi dishes are one of the finest in Kanpur. Sagar Dhaba is situated about a kilometer towards Mandhana. This place happened to be very popular among night owls before the night curfew came up. Try the egg bhurji, dal fry + rice and masala-chai.\n  Propose a guy/girl you have crush on: Well, this may be your last chance. Don\u0026rsquo;t be afraid of a \u0026lsquo;no\u0026rsquo; - it\u0026rsquo;s better than thinking \u0026lsquo;What if I had proposed?\u0026rsquo; for rest of the life. It\u0026rsquo;s a mistaken belief that \u0026lsquo;True Loves comes to those who wait\u0026rsquo;.\n  Thank the person who made a difference: If you think there is someone who made a difference in your life, thank him/her. He/She may be your professor, senior, a staff member, or anyone else. Saying a thanks costs nothing.\n  Cook a Meal For Your Friend: College diets can be quite boring and monotonous. So, if you have time and the right ingredients, prepare an awesome meal for your friends and surprise them. Even if you’re not a gourmet chef there are plenty of easy recipes for college students. And, who knows, in future they might just do the same for you!\n  Empty a bucket of cold water on your wingie in winter: Caution: This act is dangerous and lead to unpredictable consequences. You can get a water bucket emptied on you in return.  Let the water fight start and more wingies come in.\n  Sit with your wingies and talk about sex: Yes, this is important! Don\u0026rsquo;t forget to nominate a wing DOPA.\n  Go to MT: Special Tea with Samosa on a chilling winter morning - nothing feels better than that.\n  Plan a wing trip: Ah! You would have experienced this thing. Plans are made, bookings are done and then all of a sudden trip canceled just because one of the guys didn\u0026rsquo;t want to go. But seriously, go to Goa, Haridwar or wherever else - the trick is to just go if the sufficient number of people are ready to go.\n  Make a wall painting in the wing: One fine day, scribble on the wall in your wing. If your wing lacks good artists, you can choose a simple subject and a smaller area on the wall to work on. You may paint a face of your friend too.\n  Learn More About How to Have a Great College Experience: College is one of the most exciting and transformative times of your life. You’ll make lifelong friends, discover what your passion in life is, and have an opportunity to experience a culture that exists only on a college campus. Dive in, talk to people, get involved, and make the most of those four years that you can.\nDo comment or mail me if there is something else you would like me to include in the above list.\n","date":"Feb 14, 2022","permalink":"/en/posts/things-to-explore-in-college/","series":["IITK"],"tags":["IITK","College"],"title":"Things to Explore in College"},{"categories":null,"content":"SSH and how it enables secure data-sharing Note: This is intended as future notes to myself, but I hope you learn something from it too!\nCome back soon to read complete blog\u0026hellip;\n","date":"Feb 13, 2022","permalink":"/en/posts/all-about-ssh/","series":null,"tags":["SSH"],"title":"All About SSH"},{"categories":null,"content":"Competitive Coding Resources Here are some CP resources that I found useful.\nWhy did I write this blog?  Good question! There are plenty of resources out there on how to start competitive programming but what I found missing there were proper links to resources. I also had selfish reasons:- I wanted a short description, which nevertheless contained the major ideas underlying the algorithms, a discussion of their relative strengths and weaknesses, with hints on what is known (and not known, but would be good to know) about these algorithms. If I succeeded, time will tell. Or, you can, by sending me an e-mail at sandeepskr1721@gmail.com  Abstract Data structure is all about organising, retrieving, storing and managing data effectively, such that we can perform specific operation efficiently. Whereas an Algorithms is a sequence of computational steps that transform the input into the output. Learning data structures and algorithms allow us to write efficient and optimized computer programs.\nMotivation Competitive Programming(CP) is very important if one aims to improve their overall programming skills. It not only increases your problem solving aptitude, speed and knowledge but also proves to be benefitical for interships and placements. With that said, many of us ignore CP or coding up until the tests start just coz we have a mindset that coding is hard and its not our cup of tea.\nHow to get started with the sport of competitive programming? 1. Pick a suitable programming language You can do competitive programming in any programming language but it is recommended that you choose one of C/C++ or Java. C++ — Highly recommended! Why? Because it’s very fast. Implementing different algorithms takes little time because of STL which has Set, Map, Vectors etc. These can come very instrumental in solving certain kinds of problems. C++ is accepted in all competitions.\nLearn C/C++ :  For a basic overview  C++ tutorial by freeCodeCamp  Learn Standard Template Library:  https://www.youtube.com/watch?v=g-1Cn3ccwXY\u0026amp;t=1726s  https://www.hackerearth.com/practice/notes/standard-template-library/      For more depth  https://www.geeksforgeeks.org/c-programming-basics/  Learn Standard Template Library:  GFG STL  Topcoder STL Part-1  Topcoder STL Part-2      OOPS  Object Oriented Programming in cpp    Practice Problems to implement STL  https://www.hackerrank.com/domains/cpp?filters%5Bsubdomains%5D%5B%5D=stl https://codeforces.com/problemset?tags=implementation   BOOKS  https://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list    2. Choose a powerful code editor To increase the speed and efficiency of your work, it is recommended that you write your code in a code editor. VS Code, Sublime Text 3 \u0026amp; Vim are some of the popular editors where you can use their cool features and practice your craft. Use STL, snippets, and templates whenever you can; it not only saves your code length but also decreases the time to write your code. Now you can focus mainly on solving the actual logic of the problems.\n  Sublime Text is lightweight and easy to use.\n https://medium.com/programming-club-iit-kanpur/gearing-up-for-competitive-programming-86833f2325fb https://www.geeksforgeeks.org/setting-up-sublime-text-for-cpp-competitive-programming-environment/     VS Code comes with many more features than sublime. You can give it a try.\n https://www.geeksforgeeks.org/how-to-setup-competitive-programming-in-visual-studio-code-for-c/    3. Choose a few platforms to practice and start participating in contests   Hackerrank  I recommend for beginners to start with Hackerrank. It has a good set of problems placed in a well-defined manner according to the tags \u0026amp; difficulty levels and undoubtedly has the best user interface \u0026amp; IDE.    https://codeforces.com/  Getting Started: Go to the problem set tab. Set difficulty(mid-right of your screen.) to 800-900. Select a question by clicking over it. Write code on the text editor on your laptop. Save your code in a .cpp file. Upload that file on the website through choose file option under Submit?. Couldn’t solve? See editorial solution by scrolling to the bottom of the page and selecting the editorial link. Increase difficulty by 100 once you solve 10-15 problems. Start giving contests after you reach 1100-1200 difficulty in practice.    GFG  For references around data structures and algorithms, consider GeeksforGeeks and original documentation like CPPreference .    AtCoder   https://codechef.com/   HackerEarth   Leetcode   4. Learn Data Structures and algorithms:  ESO207 videos These are some commonly used data structures used in C++. Don’t worry if you can’t understand these, just have patience and enthu. https://www.topcoder.com/thrive/articles/Data%20Structures   5.Learning DP is critical. This link should cover the basics of DP.  TopCoder Dynamic Programming From Novice To Advanced    6. Practice more:  https://cses.fi/  https://leetcode.com/   7. Practice DP:  https://atcoder.jp/contests/dp/tasks  Codeforces questions with DP tag https://codeforces.com/blog/entry/67679  https://www.geeksforgeeks.org/top-20-dynamic-programming-interview-questions/ (optional) CSES and Leetcode problems(optional)     Some other resources   https://github.com/smv1999/CompetitiveProgrammingQuestionBank\n  https://github.com/kunal-kushwaha/Competitive-Programming-Resources\n  https://github.com/hkirat/Algorithmic-Resources\n   There is so much more to tell about the same. I’ll be discussing them in detail on another day. Remember there is no shortcut for success. The harder the path, the better the fruit will be. Until then, practice, have fun, and learn a lot.\n   Basics and Ethics of Competitive Programming Hello guys!\nMany of you have been wondering why are we doing CP or what benefits will it provide. Maybe for some of you, it might not be cool as some other fields like AI or ML which fascinates most people or like developing a web app (A cool stuff for many people). The main objective of competitive programming isn’t to have you implement all the fancy algorithms and data structures from scratch. Rather, it is to develop problem-solving skills.\nWell now is the time that we should focus on some of the key steps (like which language is best or which editor should we use) which we need to keep in mind to learn Competitive Programming.\nLanguage to be chosen for Competitive Programming You all have seen that there are various languages in which you can submit the solutions to a problem on all the platforms (Codeforces, Codechef, TopCoder, AtCoder). However, if you have noticed that almost all of the users submit their solution only in C++. This is because C++ has a very nice library STL(Standard Template Library) in which there are many in-build functions that we can directly use. So, it is recommended that if you use any other language than C++ then it is the time that you should switch to C++ and be comfortable in it. You can refer to this document to switch from C to C++.\nEditor to be used for Competitive Programming Some of you may have thought that which editor to be used for competitive programming. Well, some of the good editors for CP are Sublime Text (for both Linux and Windows), CodeBlocks (for Windows only), and Geany. However, if someone still uses online editor (GeeksForGeeks, Codeforces, Ideone, or CodeChef IDE) then switch to offline editors as soon as possible. Online editors should not be used during the contests because the site may crash at that time and you may lose the unsaved code. Also, if you are using Ideone or Pastebin then your code may get stolen and you might be caught in plagiarism.\nNow talking about the offline editors, if you have Linux installed on your laptop then you can easily set up Sublime Text on it. (Installing Sublime Text on Linux , Set Up Sublime Text in Linux ). However, if you are using Windows then first try to set up Sublime Text (Sublime Text for Windows ). However, if it is giving any errors which you are not able to resolve then you can set up CodeBlocks easily on your system. You can also setup Geany on your Linux system if you want. (Here is a video of Errichto for Setting up Geany for Linux Environment )\nP.S. The further blog will be in consideration that now you have switched to C++.\nTemplates and Snippets in Sublime Text Now that you have begun coding in C++, let\u0026rsquo;s talk about the template which you will need (No-one wants to write the include and define statements every time in a fresh code). You all have seen that many of the users have a fixed set of lines that are present in every code they submit. A basic template which you can all use is :\nTemplate Code\n #include \u0026lt;bits/stdc++.h\u0026gt; typedef long long int ll; #define ld long double #define pb push_back /* You may enter other macros defined by you */ using namespace std; const int MOD = 1e9+7; const ld PI = acos(-1); const ld EPS = 1e-9; const ll INF = 1e18; /* You may enter some functions too if you find them important */ void solve(){ return; } int main(){ ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); int TC = 1,t = 0; cin \u0026gt;\u0026gt; TC; while(t++ \u0026lt; TC){ // cout \u0026lt;\u0026lt; \u0026quot;Case #\u0026quot; \u0026lt;\u0026lt; t \u0026lt;\u0026lt; \u0026quot;: \u0026quot;; // For Google CodeJam and Kickstart solve(); // cout \u0026lt;\u0026lt; \u0026quot;/n\u0026quot;; } cerr \u0026lt;\u0026lt; \u0026quot;Time : \u0026quot; \u0026lt;\u0026lt; 1000 * ((double)clock()) / (double)CLOCKS_PER_SEC \u0026lt;\u0026lt; \u0026quot;ms\\n\u0026quot;; return 0; } Talking about the template, let\u0026rsquo;s first understand some of its important parts.\nThe starting part includes the header bits/stdc++.h. It is an implementation file for a precompiled header. It is a good idea to minimize the include. It actually includes a lot of files, which your program may not need, thus increase both compile-time and program size unnecessarily. But in contests, using this file is a good idea, when you want to reduce the time wasted in doing chores. It works in most online judges, programming contest environments, including ACM-ICPC (Sub-Regionals, Regionals, and World Finals) and many online judges. However, The disadvantages of it are that it increases the compilation time and uses an internal non-standard header file of the GNU C++ library, and so will not compile in MSVC, XCode, and many other compilers but however, it compiles in Sublime Text.\nNext, we have some macros which can be used to reduce the time needed for writing the same piece of code every time in your solution. For example, #define pb push_back is the most commonly used macro because we generally have to use push_back many times in a problem where a new element has to be added to a vector at the end. However, by defining this macro, we only have to write pb instead of push_back. You can also define your own macros if you want to have. However, it is also not a rule to have the same macros as in the template provided. You may also change them if you want.\nYou may have noticed here that for long long int we have used typedef long long int ll; instead of define ll long long int because the typedef has the advantage that it obeys the scope rules. That means you can use the same name for the different types in different scopes. It can have file scope or block scope in which declare. In other words, #define does not follow the scope rule. You can read more about scope rules here .\nProceeding onwards, we define some of the most commonly used constants which we generally require in one or the other problem. The first of them is MOD which is always used whenever the answer exceeds the limit of long long int or int. The value of MOD may vary from question to question but the most commonly used values are 1000000007(1e9+7) and 998244353. The next used is PI which is used whenever dealing with a problem involving geometry or angles (Note — the angles for all the trigonometric functions have to be in radians and not degrees). The next const EPS is generally used whenever we deal with problems involving precision on real numbers (generally the case for Binary Search on real numbers). With this, we come to our last constant INF which is used for the problems where we want to print \u0026ldquo;NO/-1/0\u0026rdquo; if the number exceeds this number.\nYou can also add some common functions which are generally used in your templates like the function for modulo arithmetic or modulo inverse. (You may think of adding gcd function also but it is already present in STL and can be used directly as __gcd(int x, int y). Try to guess the complexity of this inbuild gcd function. However, if you are using C++17 or above then gcd(int x, int y) is also fine to work with).\nYou must have seen various problem statements saying: \u0026ldquo;Warning: Large I/O data, be careful with certain languages (though most should be OK if the algorithm is well designed)\u0026rdquo;. It is often recommended to use scanf/printf instead of cin/cout for fast input and output. (However, for C++17(64) printf is very slow as compared to cout. So, if you are using C++17(64) then you should never use printf in your code).However, you can still use cin/cout and achieve the same speed as scanf/printf by including the following two lines in your main() function:\nios::sync_with_stdio(0); \u0026lt;br\u0026gt; cin.tie(0); cout.tie(0);  The first line toggles on or off the synchronization of all the C++ standard streams with their corresponding standard C streams if it is called before the program performs its first input or output operation. Adding ios_base::sync_with_stdio(false); (which is true by default) before any I/O operation avoids this synchronization. It is a static member of the function of std::ios_base. tie() is a method which simply guarantees the flushing of std::cout before std::cin accepts an input. This is useful for interactive console programs that require the console to be updated constantly but also slows down the program for large I/O.\nYou may have noticed that in the template there is a commented line cout \u0026lt;\u0026lt; \u0026quot;\\n\u0026quot;. Some of you may have wondered why endl is not being used in this. It is because endl flushes the output buffer everytime it is called too along with printing a new line but \\n only prints a new line. For interactive problems, it is always recommended that you should flush the output after printing every line and hence, you can always use endl instead of printing \\n and then flushing the output buffer separately.\nAt last, we are now left with the cerr object. std::cerr is an object of class ostream that represents the standard error stream oriented to narrow characters (of type char). It corresponds to the C stream stderr. The standard error stream is a destination of characters determined by the environment. This line will print the total time needed for compiling and running your program for a specific test case in milliseconds.\nSnippets in Sublime Text This brings us to the end of our template. Now you may think that you should make a separate cpp file where you can save your template but Sublime Text offers another simpler solution to that. You can add your template as a snippet in Sublime Text. Adding Snippet in Sublime Text . You can also add snippets for some important data structures like Segment Tree.\nEthics of Competitive Programming There might be points in time where some you would feel stuck with a problem within a contest and are frustrated to the core, or just lazy to go through with it anymore. Easy ways out? Possibly look at solutions for the problems if it\u0026rsquo;s a mashup/virtual contest, or during official contests, talk and start discussing about the problem(s) with friends and come up with a solution collectively / ask someone for the solution.\nSo should you opt for easy ways out ? I\u0026rsquo;ll let you figure that out. If your answer is \u0026ldquo;Yes\u0026rdquo; then, please, stop fooling yourself by giving yourself a fake sense of happiness by solving extra problem(s) in the contest/mashup/whatever. It\u0026rsquo;s definitely not worth it and completely useless. The main purpose of CP is to improve your problem solving skills, which is beaten by this.\nHowever, it is not restricted to copy standard codes from some of the standard sites like CP-Algorithms, Codeforces, and GeeksForGeeks. However, if you copy a code from these sites or from another previously occurred similar problem then always mention the source of that code in the comments so that you can argue about it if your code is caught in plagiarism.\nSTL Hey Guys!\nI have compiled some very useful resources for our first topic — Standard Template Library.\n  Topcoder STL :- A very useful, self-explanatory, and easy to understand resource.\n  Rachit Jain STL   The following resources are optional and I recommend you to go through these resources only after completing the above two links.\n  Hackerearth STL   Topcoder article summary   To overcome the issue of creating functions that perform the same operations but work with different data types, C++ provides a feature to create a single generic function instead of many. The collection of these genric classes and functions is called STL which includes many different kinds of algorithms to provide support to tasks such as initializing, searching, copying, sorting, and merging, Algorithms are implemented by template functions.\nStandard Template Library provides us with many important trivial data structures and algorithms which generally take up a lot of time to implement by ourselves. In order to be a good Competitive Programmer, you must have a strong command over STL.\nGo through these links, discuss among yourselves and ping the mentors with any doubts. In a few days, we will be adding a long contest with various types of problems for you to practice.\nHappy Learning!\nBinary Search Hey Guys!\nWe have compiled some resources you might find useful to study the second topic we would be covering, Binary Search. You might be aware of most of what is discussed in them, but I would still advise you to go through them and practice problems concerning binary search. We would soon be hosting a long contest for the same as well.\nLeetcode: Binary Search 101 (I found this article easy to understand. It has simulations as well for better concept clarity)\nTopcoder: BS Topcoder (One of the better binary search tutorials out there)\n(Optional) Errichto: Binary Search tutorial (C++ and Python) (Not a very big fan of this video, but covers an appreciable amount of basics)\nBS SPOJ (Make sure you try hard, and not look at the solution for a long time, it\u0026rsquo;ll increase your appreciation of the binary search algorithm highly)\nhttps://drive.google.com/file/d/0B1yhFrxtsDsyLTdDUTZMSUV6RzA/view (This seems like a good resource, but gives a lot of answers directly and is not advised to be used as a primary resource)\nYou should perceive binary search as more of an idea than an exact sequence of steps where you memorize the code and reproduce it (This causes fatal errors in code and irritating one-offs). There are multiple ways to code it, and the resources show their own favorite version, feel free to use any, as long as you\u0026rsquo;re comfortable with it.\nUPD: You guys can also refer to Codeforces EDU section where pashka has explained binary search in great detail.(Link: ITMO Academy: pilot course )\nCheers and Happy Programming!!\nBasics of Number Theory Hey Guys!\nThe next topic is Basics of Number Theory. If you have been participating in contests regularly, probably you are quite familiar with Number Theory that you would be needing for competitive programming. We have listed some topics that we think you should know and also compiled some resources that you might find useful.\n  Euclidean Algorithm to find GCD of two numbers : The algorithm basically states gcd(a,b)=gcd(b,a%b)gcd(a,b)=gcd(b,a%b) . This can be computed recursively and in O(loga+logb)O(log?a+log?b) time. You should try to implement it yourself.\n  Bezout\u0026rsquo;s identity : Bezout\u0026rsquo;s identity states that if d=gcd(a,b)d=gcd(a,b) , then there exist integers xx and yy , such that ax+by=dax+by=d (Try and prove that dd is the minimum positive integer that can be expressed as a linear combination of aa and bb .\n  Extended Euclidean Algorithm : Now that you are aware of the fact that gcd(a,b)gcd(a,b)can be expressed as a linear combination of aa and bb , the coefficients xx and yy can be found using this algorithm. You can check out the algorithm and a detailed explanation at https://brilliant.org/wiki/extended-euclidean-algorithm/ and you find the implementation at https://www.geeksforgeeks.org/euclidean-algorithms-basic-and-extended/ .\n  Sieve of Erastothenes : This is an extremely useful algorithm and you will find the need to use it time and again. The idea behind the sieve is that you can iterate through multiples of each prime i,1?i?ni,1?i?n which are less than nn , in O(nlognlogn)O(nlog?nlog?n) (The complexity of this has to do with the sum of reciprocals of first nn natural numbers (or nn th Harmonic number)). The sieve not only allows you to find the prime factors in a range, it also allows you to find the smallest (or largest) prime factor of all numbers in a range, and in turn you can find the factorisation of a number mm in O(logm)O(log?m) . You can find a clean implementation and detailed explanation at https://cp-algorithms.com/algebra/sieve-of-eratosthenes.html   Modular Arithmetic : I hope you have encountered problems which require to find results modulo some constant M. Modular Arithmetic is nothing but performing basic arithmetical operations modulo some constant, and there are some basic properties you need to keep note of. More often than not you will have to work with a prime as the Modulo base (like 1e9+71e9+7 ), which makes life much easier :). The most important theorem in this context would be Euler\u0026rsquo;s theorem, which states that a?(m)?1?1 mod ma?(m)?1?1 mod m , where gcd(a,m)=1gcd(a,m)=1 . Now, if mm is a prime then the equation becomes am?1?1 mod mam?1?1 mod m , which is Fermat\u0026rsquo;s Little theorem, and this is useful in finding inverse of aa modulo mm which would be am?2 mod mam?2 mod m . You can read more about modular inverse at https://cp-algorithms.com/algebra/module-inverse.html . Definitely check out this blog to know more about modulo arithmetic and where it is used.\n  Linear Sieve and Multiplicative Functions: Linear sieve is used to calculate some really useful number-theoretic functions like phi function, totient function. A really great tutorial — https://codeforces.com/blog/entry/54090   Chinese Remainder Theorem: A fairly popular algorithm which you might have heard of. A detailed explanation can be found here — https://codeforces.com/blog/entry/61290   In some of the links above, we have added a link of the website cp-algorithms . This is a great website in general to check out many theorems and algos that are useful in competitive programming. Some practice questions are also added at the end of the tutorials there, do try to solve those so that you get a good grasp of the algorithm and on how to implement it.\nIt\u0026rsquo;s very important in CP that you be familiar with the first 55\nalgorithms, so make very sure you understand the underlying concept that goes in them and practice enough problems.\nFinally, do checkout the following links as aggregate resources:\nhttps://www.codechef.com/wiki/tutorial-number-theory https://artofproblemsolving.com/community/c90633h1291397 https://www.hackerearth.com/practice/notes/number-theory-1/ Graphs Hey Guys!\nThe next topic which will be covered is Graphs. The initial topics which we have planned to cover are DFS/BFS. We have compiled some resources for it which you may find helpful. We will be hosting a contest soon on BFS/DFS.\nBasic Graph Introduction and BFS/DFS: https://slides.com/nikhilag/introduction-to-graphs-2d26ce#/ Codeforces: https://codeforces.com/blog/entry/16221 (It contains some advanced topics too. You may read them also if you want.)\nCP-Algorithms (DFS): https://cp-algorithms.com/graph/depth-first-search.html CP-Algorithms (BFS): https://cp-algorithms.com/graph/breadth-first-search.html You can find some problems for practice on CP-Algorithms.\nYou should always try to write code for BFS/DFS and not memorize it or insert into your template.\nFeel free to have a discussion.\nBonus : Tutorial on Bitwise Operations — https://www.topcoder.com/community/competitive-programming/tutorials/a-bit-of-fun-fun-with-bits/ (May come handy in future)\nCheers and Happy Programming!!\n","date":"Sep 7, 2021","permalink":"/en/posts/cp/","series":["Cp"],"tags":["Cp","c++"],"title":"Competitve Programming"},{"categories":null,"content":"A short interpretation on some superb features of Scala. I\u0026rsquo;m writting this microblog while learning Scala as a part of my SnT project (gaining insight into different programming languages ​​and understanding different paradigms of programming.)\nScala The name is an acronym from \u0026lsquo;Scala\u0026rsquo;able Language. As it\u0026rsquo;s purpose of introduction was to resolve scalability issues. The evolution of traditional languages such as Java, C#, and C++ has slowed down considerably, and programmers who are eager to use more modern language features are looking elsewhere. Scala is an attractive choice. Scala is a functional and fast language but it’s not perfect (no language is, after all).\nLike Haskell, Scala can be used as a purely functional language. However unlike Haskell it is also purely object oriented like Java. Scala was designed to improve upon Java, so you can call Java methods, inherit from Java classes, and much more. Scala shares similar features with many languages because of both of its functional and object-oriented paradigm. The Scala interpreter lets you run quick experiments, which makes learning Scala very enjoyable.\nScala is statically typed This makes the type system more complex and difficult to understand but allows almost all types of errors to be caught at the time of compilation and can result in significantly faster execution. By contrast, dynamic typing requires more testing to ensure program correctness, and thus is generally slower, to allow greater programming flexibility and simplicity.\nRegarding speed differences, current versions of Groovy and Clojure allow optional type annotations to help programs avoid the overhead of dynamic typing in cases where types are practically static. This overhead is further reduced when using recent versions of the JVM, which has been enhanced with an invoke dynamic instruction for methods that are defined with dynamically typed arguments. These advances reduce the speed gap between static and dynamic typing, although a statically typed language, like Scala, is still the preferred choice when execution efficiency is very important.\nTraits, Generics, Classes and Objects. Huh?! We learned how to use the basic object-oriented primitives in Scala. We were very familiar with these concepts.However, here we also applied more declarative/functional principles. For instance, if we implemented a Binary Tree with classes and objects. However, we do not need to use imperative code to do so. Instead of updating a tree’s state, we would return a new instance of the tree. This by nature is purely functional. Wow. There are no side effects. The data is immutable. But, wow.\nScalability Scala, what started as a general-purpose programming language, is today creating ripples in the Big Data industry — all because of its high scalability factor and ability to handle Big Data sets. Perhaps that is why a lot of data analytics software offers support for Scala, making it easy to integrate the software into your system.\nScalability refers to “the ability of a system, network, or process to handle a growing amount of work in a capable manner or its ability to be enlarged to accommodate that growth.” For a business, scalability means that you are prepared to handle an increasing number of customers, clients, and/or users.\nIt’s one of the standout features of Scala because something like Ruby, which Twitter used before transitioning to Scala, doesn’t have the ability to support big data effectively. Yes, Twitter switched over to Scala for their backend years ago. While Ruby on Rails is still used for frontend.\nInteroperability with Java A useful feature of scala is its interoperability with Java source code.\nWell, Martin Odersky wanted to start with a clean sheet, and see whether he could design something that\u0026rsquo;s better than Java. But at the same time he knew that it wasn’t possible to start from scratch. So he had to connect to an existing infrastructure, because otherwise it\u0026rsquo;s just impractical to bootstrap yourself out of nothing without any libraries, tools, and things like that.\nSo Martin Odersky decided that even though he wanted to design a language that was different from Java, it would always connect to the Java infrastructure—to the JVM and its libraries. That was the idea.\nThe sample code below shows a program that builds a GUI based off of imported Java libraries\nImport java.util.*; Class JavaRawType { Public static Vector\u0026lt;?\u0026gt;languages( ) { Vector languages = new Vector( ) ; languages.add(\u0026#34;Scala\u0026#34;); languages.add(\u0026#34;Java\u0026#34;); languages.add(\u0026#34;Haskell\u0026#34;); return languages; } } ","date":"Jul 29, 2021","permalink":"/en/posts/feature-of-scala/","series":["Projects"],"tags":["Scala","Twitter"],"title":"Feature of Scala"},{"categories":null,"content":"How to use interfaces in Go? Just as many human-based languages exist, There are dozens of programming languages used in the industry today to communicate with computers. Each language has its own distinct features, though many times there are some similarities between programming languages. If you wish/need to master a programming language, you might wonder which one to learn.After all, it will take time to learn the language, so everyone want to make the right choice.\n No language perfectly fits for all the problems. It all depends on our ecosystem, needs and several other factors to choose languages. A large number of developers make mistake and choose programming languages just because it is more popular, trendy, and cool.\n GO is one of the important languages in many aspects. An interesting feature in Go is existence of interfaces.. You might have studied interfaces in other languages as well but Go language interfaces are different and easier as compared to other languages. In this blog we will mainly deal with interfaces in GO.\n In my past few days of learning and using Golang, I have come across many findings related to the use of interfaces.\n So if you ask what is interfaces?  An interface is defined as a set of method signatures, but it is also a type. Interfaces make the code more flexible, scalable and this is one way to achieve polymorphism in Golang. When a type provides definition for all the methods in the interface, it is said to implement the interface. Interfaces are implemented implicitly .Unlike other languages like Java, you don’t need to explicitly specify that a type implements an interface using something like an implement keyword. You just implement all the methods declared in the interface and you’re done.\nLet me explain with an example before you call me a loon.\npackage main import \u0026quot;fmt\u0026quot; type Programmer interface { HelloWorld() string }  Preety simple:- We define a Programmer as being any type that has a method named HelloWorld. The HelloWorld method takes no arguments and returns a string. Any type that defines this method is said to satisfy the Programmer interface. Let’s create some of the types that satisfy this interface-\n type GO struct { } func (a GO) HelloWorld() string { return \u0026quot;fmt.Println('hello world')\u0026quot; } type Java struct { } func (b Java) HelloWorld() string { return \u0026quot;System.out.println('Hello World')\u0026quot; } type Ruby struct { } func (c Ruby) HelloWorld() string { return \u0026quot;puts 'Hello World' \u0026quot; } type JavaScript struct { } func (d JavaScript) HelloWorld() string { return \u0026quot;console.log('Hello World')\u0026quot; } type Julia struct { } func (e Julia) HelloWorld() string { return \u0026quot;print('Hello World')\u0026quot; } type Scala struct { } func (f Scala) HelloWorld() string { return \u0026quot;println('Hello World')\u0026quot; }  We now have six different types of Programmers. In our main() function, we can create a slice of Programmers, and put one of each type into that slice, and see How each programmer prints \u0026lsquo;Hello World\u0026rsquo;. Let’s do that now:\nfunc main() { programmers := []Programmer{GO{}, Java{}, Ruby{}, JavaScript{}, Julia{},Scala{}} for _, programmer := range programmers { fmt.Println(programmer.HelloWorld()) } }  You can view and run this example here .\n fmt.Println('hello world') System.out.println('Hello World') puts 'Hello World' console.log('Hello World') print('Hello World') println('Hello World') Program exited.  Success  The interface{} type (the empty interface) The interface{} type is similar to that interface, only difference is interface{} type has no methods. Since the empty interface has zero methods, all types implement the empty interface. So we can assign any type of variable to an empty interface. The code is essentially saying “I need an argument, and I don’t care what methods it implements\u0026quot;. That means that if you write a function that takes an interface{} value as a parameter, you can supply that function with any value. So, this function:\n func PerformSomeTask(x interface{}) { ----- ----- }  will accept any parameter whatsoever.This can be a little confusing. Newbies are led to believe that “x is of any type”, but that is wrong. x is not of any type; it is of interface{} type. Wait, what? When passing a value into the PerformSomeTask function, the Go runtime will perform a type conversion (if necessary), and convert the value to an interface{} value. All values have exactly one type at runtime, and a static type of x is interface{}.\nIn our previous example, when we constructed a slice of Programmer values, we did not have to say something awkward like Programmer(Scala{}) to cast a value of type Scala into the slice of programmers values, because the conversion was handled for us automatically. Within the programmers slice, each element is of Programmer type, but our different values have different underlying types.\nlet\u0026rsquo;s look an example for better understanding-\n package main import ( \u0026quot;fmt\u0026quot; ) func PrintAll(vals []interface{}) { for _, val := range vals { fmt.Println(val) } }  Here’s some broken code in main function that is representative of a common misunderstanding of interface{} type\nfunc main() { names := []string{\u0026quot;stanley\u0026quot;, \u0026quot;david\u0026quot;, \u0026quot;oscar\u0026quot;} PrintAll(names) }  Running this, you can see that we encounter the following error: cannot use names (type []string) as type []interface {} in function argument.  If we want to actually make that work, we would have to convert the []string to an []interface{}:\nfunc main() { names := []string{\u0026quot;stanley\u0026quot;, \u0026quot;david\u0026quot;, \u0026quot;oscar\u0026quot;} vals := make([]interface{}, len(names)) for i, v := range names { vals[i] = v } PrintAll(vals) } Ok  This might look pretty ugly, but c\u0026rsquo;est la vie. Not everything is perfect.\n","date":"Jul 26, 2021","permalink":"/en/posts/interfaces/","series":["Projects"],"tags":["GO","interfaces"],"title":"Interfaces"},{"categories":null,"content":"Introduction to Linux Operating Systems. It\u0026rsquo;s worth writing everything you do. Maybe you learned something new in the version control system, or fixed something in your operating system. As similar problems become convenient if you have solutions to problems already encountered. Ofc this also preserve your interest.\nThis blog mainly consists of my learnings and experiences about operating systems. The story of having multiple OS\u0026rsquo;s on my machine. Also why I prefer linux kernel over Windows\nAbout six months ago I thought of switching from windows to linux. But why?  There are countless reasons to go for Linux. Once you do a search on Google it will bring you many articles on why you should choose Linux, such as “Why you should switch to Linux,” “What are the benefits of learning Linux,” and “Is it worth my time to learn Linux while learning programming?”It takes a while, but it\u0026rsquo;s worth the read.\nWe\u0026rsquo;ll talk about it sometime later.\n In general, transitions are always difficult and can be scary. For Windows users who have never used the CLI, transitioning to Linux can be really scary. But also knowing that others also find it difficult can be really consoling at times :smile in pain:. Fear of screwing up makes the transitions difficult. But if you can manage the first few days, the ultimate returns are exponential.\nAlthough Linux is a great operating system with extensive hardware and software support, the reality is that sometimes you have to use Windows, probably because of core apps that won\u0026rsquo;t run on Linux. So installing Linux with Windows (dual boot) was what I was going to do.\n   At first I chose Ubuntu (recommended for beginners) to start with. And later installed other linux destros as well.Choose other flavours once you know better and can decide for yourself. Although the dual-boot setup process is not very involved, One can easily dual boot following some articles on the internet. But due to different types of laptops and their different functioning things don\u0026rsquo;t work accordingly. Accidents can still happen. So before you begin, make sure you have backed up your computer. In addition to backing up your files, consider backing up an image of the disc, though this isn\u0026rsquo;t required and can be a more advanced process. So I followed some articles to dual boot Windows and Ubuntu. Yes I messed up some steps and ended up Overwriting Operating System [Windows 10 with Ubuntu] :(\nConcise description of the obstacle  Before installing Ubuntu I created a free partition on the hard disk drive (HDD) where Ubuntu would be installed during the installation process. Then I booted from the Live Ubuntu USB and started looking for free partitions while allocating disk space. Since I was an absolute beginner at linux, I didn’t know the naming scheme of disks in Linux, also Ubuntu installer did not recognize my HDSo I followed somD and only found the SSD where windows was already installed. And inadvertently wiped Windows :p. So I couldn\u0026rsquo;t boot into Windows. I tried troubleshooting and advanced recovery options, but it didn\u0026rsquo;t work. Finally I repaired Windows using ISO file.\nAfter doing some searching around google, I found that it turned out to be because I had RAID enabled for the HDD. Then I saw the operating mode of the Integrated Storage Device Controllers. The storage device was configured to support RAID functions with a VMD controller for all NVMe and SATA devices. In order to boot the OS, the Windows RST driver or the Linux kernel VMD driver must be loaded. If you try disabling RAID in the BIOS then Windows would not boot.  For the best of my understanding here are some key points:-\n Set Windows to boot into safe Mode on next restart.  Press the Windows logo key + R Type msconfig in the Open box. Check the Safe boot checkbox under Boot options in Boot tab.   Enter the BIOS setting and disable RAID. Config Storage device for AHCI/NVMe mode. Boot to Windows. Windows will boot into Safe Mode automatically. Exit the safe mode, so that the system will boot into normal mode.  Clear the Safe boot checkbox under Boot options in Boot tab.    After this, Windows worked with RAID disabled, and later I was able to install Debian successfully :)  \nTo be continued\u0026hellip;\n","date":"Jul 22, 2021","permalink":"/en/posts/operating-systems/","series":["linux"],"tags":["os","ubuntu","debian"],"title":"Operating Systems"},{"categories":["Programming"],"content":"Markdown is a way to style text on the web. You control the display of the document; formatting words as bold or italic, adding images, and creating lists are just a few of the things we can do with Markdown. Mostly, Markdown is just regular text with a few non-alphabetic characters thrown in, like # or *.\nYou can use Markdown most places around GitHub:\nGists Comments in Issues and Pull Requests Files with the .md or .markdown extension  This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\n# This is an \u0026lt;h1\u0026gt; tag ## This is an \u0026lt;h2\u0026gt; tag ###### This is an \u0026lt;h6\u0026gt; tag H1 H2 H6 Emphasis *This text will be italic* _This will also be italic_ **This text will be bold** __This will also be bold__ _You **can** combine them_ This text is italic\nThis is also italic\nThis text is bold This is also bold You can combine them\n Type ' \\ ' to break horizontal line.\n Images Format: ![Alt Text](url) Links Format: [This](url) is Blog102 This is Blog102\nInline code I think you should use an `\u0026lt;addr\u0026gt;` element here instead. I think you should use an \u0026lt;addr\u0026gt; element here instead.\nParagraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution \u0026gt; Tiam, ad mint andaepu dandae nostion secatur sequo quae. \u0026gt; **Note** that you can use *Markdown syntax* within a blockquote.  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution \u0026gt; Don't communicate by sharing memory, share memory by communicating.\u0026lt;br\u0026gt; \u0026gt; — \u0026lt;cite\u0026gt;Rob Pike[^1]\u0026lt;/cite\u0026gt;  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike[^1] Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n Name | Age --------|------ Bob | 27 Alice | 23    Name Age     Bob 27   Alice 23    Inline Markdown within tables | Italics | Bold | Code | | -------- | -------- | ------ | | *italics* | **bold** | `code` |    Italics Bold Code     italics bold code    Code Blocks Code block with backticks ```html\nWrite your code here\n```\n\u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode {{\u0026lt; highlight html \u0026gt;}} Write your code here\n{{\u0026lt; /highlight \u0026gt;}} \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;\nList Types Ordered List 1. First item 2. Second item 3. Third item  First item Second item Third item  Unordered List * List item * Another item * And another item  List item Another item And another item  Nested list * Fruit * Apple * Orange * Banana * Dairy * Milk * Cheese  Fruit  Apple Orange Mango   Dairy  Milk Cheese    Task Lists - [x] @mentions, #refs, [links](), **formatting**, and ~~tags~~ supported - [x] list syntax required (any unordered or ordered list supported) - [x] this is a complete item - [ ] this is an incomplete item  @mentions, #refs, links , formatting, and tags supported list syntax required (any unordered or ordered list supported) this is a complete item this is an incomplete item  Other Elements — abbr, sub, sup, kbd, mark \u0026lt;abbr title=\u0026quot;Graphics Interchange Format\u0026quot;\u0026gt;GIF\u0026lt;/abbr\u0026gt; is a bitmap image format. GIFis a bitmap image format.\nH\u0026lt;sub\u0026gt;2\u0026lt;/sub\u0026gt;O H2O\nX\u0026lt;sup\u0026gt;n\u0026lt;/sup\u0026gt; + Y\u0026lt;sup\u0026gt;n\u0026lt;/sup\u0026gt; = Z\u0026lt;sup\u0026gt;n\u0026lt;/sup\u0026gt; Xn+ Yn= ZnPress \u0026lt;kbd\u0026gt;\u0026lt;kbd\u0026gt;CTRL\u0026lt;/kbd\u0026gt;+\u0026lt;kbd\u0026gt;ALT\u0026lt;/kbd\u0026gt;+\u0026lt;kbd\u0026gt;Delete\u0026lt;/kbd\u0026gt;\u0026lt;/kbd\u0026gt; to end the session. Press CTRL+ALT+Deleteto end the session.\n","date":"Jul 12, 2021","permalink":"/en/posts/markdown-syntax/","series":null,"tags":["Markdown","CSS","HTML"],"title":"Markdown Syntax Guide"},{"categories":null,"content":"Hey ,Glad you are here :Slightly Smiling Face: I’m Sandeep Kumar, a undergrad student in Computer Science and Engineering at IIT Kanpur,(class of 2024). Since the endsem exams of my second semester ended today {in my bedroom on a random Sunday at 11:10 AM :Slightly Frowning Face: } I thought of posting programming stuffs and general life experience as well. So I chose to make my own blog manager.Based on my experience and working with peers I loved to give you an overview. I am grateful for working with some amazing people from which I had the pleasure to learn a lot.\n After researching different programming languages I really got into HTML and CSS.For me initially it was the desire to build my own website. Then in the process I found the beautiful world of programming :) .\n This is my second webpage ready in two semester. Though every time I try something cool and new to get a good learning experience. So finally this time I decided to use some static site generators. Yes, it is easy to maintain and support full markdown based blog along with other great features\nCurrently I have hosted this blog on Netlify and Github pages. Sometime Later I might shift to other domains if I find some cool one or a Personal domain.\n This static site is build using Jekyll Hugo framework and a Bootstrap theme.\n Is it easy to setup Hugo ? I went through the Official docs of Hugo.Here are some of the key points from the docs:-\n Hugo can be installed on any machine where the Go compiler tool chain can run. Being familiar with Golang and Ruby was the reason I chose Hugo and Jekyll respectively over any other frameworks. We can install Hugo using sudo snap install hugo and sudo apt-get install hugopackages but these options are not recommended because the Hugo in Linux package managers for Debian and Ubuntu is usually a few versions behind. Homebrew was recommended but I personally don\u0026rsquo;t want to install brew for just Hugo. So I then tried to find some extended versions of Hugo on google. But still being a noob at googling I couldn\u0026rsquo;t find any way.   Above point is only for Ubuntu and Debian. As most of the time I use these two operating systems.(Also I will describe more about operating systems I have on my machine and how I f*cked up while Installing multiple OS in some another blog ,till then stay tuned.)  I finally found a Extended version on Github : facepalm : . Here are some steps how I installed it-   Open Your terminal (Ctrl+Alt+T) and download the latest version of Hugo package from the Git repository by executing the following commands:- 1.$ sudo apt-get update -y 2.$ wget https://github.com/gohugoio/hugo/releases/download/v0.79.0/hugo_0.79.0_Linux-64bit.deb 3. $ sudo dpkg -i hugo_0.79.0_Linux-64bit.deb 4. $ sudo apt-get install -f Info  You can check version by-\nhugo version Success  Hugo setup is complete and ready to work. Refer to above git repository for updated versions.\n During the whole process of building this blog I spent majority of time understanding how it works and customizing the CSS . Do check Dark Mode ,Font Size and Palette in settings at top right corner. It might be disconcert initially but altogether it\u0026rsquo;s easy to maintain (You can create the whole syntax of new posts just by executing some commands.) There’s a lot more to explore about it.This was all about how this blog enhanced. See you a semester later! :)If you got here after reading this, I must\u0026rsquo;ve been making sense. If you have any questions, feel free to hit me up. I look forward to seeing you soon on campus. :Red Heart:\n","date":"Jul 11, 2021","permalink":"/en/posts/blog102/","series":["About me"],"tags":["blog102","Hugo","Jekyll"],"title":"Blog102"},{"categories":["Shortcode"],"content":"I am writing this fun blog while learning different Programming Languages as a part of my college project (gaining insight into different programming languages ​​and understanding different paradigms of programming.)\n    General Concepts- Here is a quick overview on Fundamentals of Programming Languages : Similar to human interface languages, which have their own set of rules that have to be followed in order to write correctly in that language, programming languages ​​also follow certain rules.Classification of programming languages on the basis of -\n Programming Paradigms Programming Models Type System  1) Programming Paradigms Programming Paradigm is a style, technique, or way of writing a program to solve a problem.There are two primary programming paradigms:-\n Imperative :- Imperative programming is the oldest programming paradigm.Programs in which we need to clearly define the sequence of instructions for the computer are imperative. Declarative:- In the declarative programming paradigm, we simply tell the problem to the computer and let the computer decide what action to take. In other words, we just need to express the logic of the computation without talking about its control flow.  2) Programming Models Programming Models :- Programming Model is a set of concepts used to create software, which are mainly used to guide the development of programming languages. The programming model acts as a bridge between algorithms and actual implementations. Languages can be classified into many, many models.\n  Procedural Oriented: The program in which code is written in step wise procedure mainly in the form of sub-functions is Procedural Oriented.This is derived from structured programming.For example C language.\n  Purely Object Oriented: Languages in which everything is treated consistently as an object, from primitives such as characters and integers, all the way up to whole classes, blocks, modules,etc.Ruby is one such language.\n  Purely Functional: Languages in which programs are constructed by applying and composing functions.Here, functions also do not have any side-effects in other words no function can alter the internal state of some variable.Haskell is one such language.\n  Logic Programming: Languages in which a program is written as a set of sentences in logical form.For these, PROLOG(programming in logic) is the best known example. Here, a program is executed by an “inference engine” that answers a query by searching these relations systematically to make inferences that will answer a query.\n  3) Type System In programming languages, a type system is a logical system comprising a set of rules that assigns a property called a type to the various constructs of a computer program, such as variables, expressions, functions or modules.\n A.Strong vs Weak typing: B.Static vs Dynamic 1 typing: C.Manifest vs Inferred: D.Nominal vs Structural: E. Duck Typing:   This project comprises of following six major languages: Python  JavaScript  Ruby  Go  Scala  Julia   More Info about above languages and tasks can be found in respective folders.\n","date":"Jun 17, 2021","permalink":"/en/posts/programming-languages/","series":["Projects"],"tags":["programming101","paradigms"],"title":"getting insights into various programming languages"},{"categories":["Shortcode"],"content":"Rienforcement Learning to develop AI agents Reinforcement learning (RL) is an area of machine learning concerned with how intelligent agents ought to take actions in an environment in order to maximize the notion of cumulative reward.Reinforcement learning is one of three basic machine learning paradigms, alongside supervised learning and unsupervised learning.\nReinforcement learning differs from supervised learning in not needing labelled input/output pairs be presented, and in not needing sub-optimal actions to be explicitly corrected. Instead the focus is on finding a balance between exploration (of uncharted territory) and exploitation (of current knowledge).\nThis project \u0026quot;Learning RL to develop AI agents\u0026quot; was offered by ACA(Association of Computer Activities IITK).\nGeneral Concepts : Introduction to Machine Learning  Field of study that gives computers the ability to learn without being explicitly programmed.A computer program is said to learn from experience E with respect to some task T and some performance measure P,if its performance on T,as measured by P, improves with experience E.\nMachine learning algorithms:  Supervised learning Unsupervised learning Reinforcement learning.  Model Representation Generaling speaking,The aim of the supervised learning algorithm is to use the given training Dataset and output a Hypothesis function.Where Hypothesis function takes the input instance and predicts the output based on its learnings from the training dataset. Linear\tregression\twith\tone\tvariable. For linear regression in one variable,the hypothesis function will be of the form-h(x) = Θ0 + Θ1*x where, Θ0 and Θ1 are the parameters.\nThe line seen in the graph is the Hypothesis function. This line is the best fit that passes through most of the points.Now we know it\u0026rsquo;s not possible to tell the hypothesis function by merely looking at the graph! We need some systematic way to figure it out.Cost Functionhelps us to figure out which hypothesis best fits our data. Or more formally,It helps us to measure the errorof our hypothesis.It\u0026rsquo;s often called the squared error function.Mathematically, Cost function —\n(h(x) — y)² : Squared vertical distances of the scattered points from the hypothesis. ∑(h(x) — y)²/2m: Average Squared vertical distances of the scattered points from the hypothesis, i.e Mean Squared error. Now we have our hypothesis function and we also have a method of measuring how well it fits into the given data.All we need to do is find the value of parameters(Θ0 and Θ1) for which the cost function (i.e. error) is minimum.That’s where gradient descent comes into the picture\nGradient descentis an optimization algorithm for finding a local minimum of a differentiable function.Gradient descent is simply used to find the values of a function\u0026rsquo;s parameters that minimize a cost function as much as possible.Here you can find more details about Gradient descent.Mathematical form of Gradient Descent for Linear Regression-repeat until Convergence:{ Theta(0) := Theta(0) - (α/m)* Σ(h(xi) - yi) Theta(1) := Theta(1) - (α/m)* Σ(h(xi) - yi) } Note:- 1) Update Theta(0) and Theta(1) Simultaneously. 2) Σ is done for i=0 to m. where, m is Number of training examples in training dataset. Here, α is the size of each step known as the Learning rate. The value of α should be selected with care to ensure that the gradient descent algorithm converges correctly in a reasonable time. \nTo be continued\u0026hellip;\nCome back soon for more:) Go ahead and give some stuff here a read.\n","date":"Jun 15, 2021","permalink":"/en/posts/rienforcement-learning/","series":["Projects"],"tags":["RL","ML","aca"],"title":"Rienforcement Learning to develop AI agents"},{"categories":null,"content":"Hi! I am a Sophomore at IIT Kanpur.Currently Pursuing my majors in the Department of Computer Science and Engineering.\nThere\u0026rsquo;s much more for me rather than just studying. I\u0026rsquo;m interested to jump in and try some coding. I love playing outdoor games, PC gaming at times, writing something to share my stories with, and of course hanging out with my friends.\nBieng the lone wolf is ok, it tells me you\u0026rsquo;re independent ,brave, strong\u0026hellip;.. But it is more important to be in a pack. I am grateful for working with some amazing people from which I had the pleasure to learn a lot.\nIf you want to collaborate/have a query or just want to gossip feel free to hit me up. I am always tempted to connect with people :Grinning Face:\nMajor Interests  Machine learning Competitive Programming Artificial Intelligence Software Development  ","date":"Jun 2, 2021","permalink":"/en/about/","series":null,"tags":null,"title":"About Me"},{"categories":["Programming"],"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes .\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\n N.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1).emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; }\n","date":"Jun 2, 2021","permalink":"/en/posts/emoji-support/","series":null,"tags":["Emoji"],"title":"Emoji Support"}]